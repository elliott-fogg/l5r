/*
Set 'toggle' checkbox to be invisible. Clicking on the label for it will 
active it
*/
input[type='checkbox'].toggle {
	display: none;
}

.wrap-collabsible {
	margin: 1.2rem 0;
}

/* Set the style for the label, which is being used as a button */
.lbl-toggle {
	display: block;
	font-weight: bold;
	font-family: monospace;
	font-size: 1.2rem;
	text-transform: uppercase;
	text-align: center;
	padding: 1rem;
	/*color: #CCC;*/
	color: #FFF;
	background: #333;
	cursor: pointer;
	border-radius: 7px;
	transition: all 0.25s ease-out;
}

/* Set the color the collapsible label text changes to when it's hovered over */
.lbl-toggle:hover {
	/*color: #FFF;*/
	color: #ff3d3d;
}

/* Include some text before the content of each element with class 'lbl-toggle'.
	By creating some spaces with a background, we can create a square, which can
	be manipulated into an arrow. */
.lbl-toggle::before {
	content: ' ';
	display: inline-block;
	border-top: 5px solid transparent;
	border-bottom: 5px solid transparent;
	border-left: 5px solid currentColor;
	vertical-align: middle;
	margin-right: .7rem;
	transform: translateY(-2px);
	transition: transform .2s ease-out;
}

.toggle:checked+.lbl-toggle::before {
	transform: rotate(90deg) translateX(-3px);
}

.collapsible-content { 
	max-height: 0px;
	overflow: hidden;
	transition: max-height .25s ease-in-out;
}

.toggle:checked + .lbl-toggle + .collapsible-content {
	max-height: none;
}

.toggle:checked+.lbl-toggle {
	border-bottom-right-radius: 0;
	border-bottom-left-radius: 0;
}

.collapsible-content .content-inner {
	background: rgba(0, 105, 255, .2);
	border-bottom: 1px solid rgba(0, 105, 255, .45);
	border-bottom-left-radius: 7px;
	border-bottom-right-radius: 7px;
	padding: .5rem 1rem;
}

.collapsible-content p {
	margin-bottom: 0;
}